[
["index.html", "Encyclopedia of Quantitative Methods in R, vol. 0: Setting up Your Computer Welcome Preface The Authors Blocked Notes 0.1 Code and Output Why choose R ? FYI", " Encyclopedia of Quantitative Methods in R, vol. 0: Setting up Your Computer Sarah Schwartz &amp; Tyson Barrett Last updated: 2018-08-20 Welcome Preface This encyclopedia of eBooks is being developed by the Office of Research Services to serves the faculty and graduate students in the College of Education and Human Services at Utah State University. The three main purposes are to: Provide reference material for graduate quantitative methods courses (EDUC/PSY 6600, EDUC/PSY 7610, PSY 7650, ect.) Support college wide workshops given by the Statistical Consulting Studio and Data Science and Discover Unit Facilitate individual consultations with the authors pertaining to research. Volume Title Content Software Computer Setup Installing software (R, R Studio, and Packages), workspace oridentation, notebook workflow, and periodic updating Wrangling Data Management Importing data files (SPSS, excel, csv, ect.), sub-setting (observations and variables), creating new variables, and saving revised data Exploratory Exploratory Data Analysis Computing and tabulating summary statistics (M/SD, count/%) and creating descriptive visualizations of distributions (boxplots, histograms) and relationships (scatter plots) ANOVA Testing Mean Differences t-tests (independent groups, paired observations), ANOVA (independent or between subjects, 1-way, 2-way), RM ANOVA (repeated meausres, between subjects), mixed ANOVA (both independent and between subjects), visualizations (marginal means to prob interactions) and post hoc tests (multiple corrections, contrast statements) Regression Regression Calculating and visualizating correlation, multiple regression models (fitting, tabulating results, graphicaly probing interactions), and generalizing the distribution (GLM: logistic regression, poisson regression, ect.) Multilevel Mixed Effects Regression Modeling clustered/hierarchical or longitudinal/repeated observations with multilevel models (MLM, LMM, GLMM, HLM), including computing ICCs, model fitting, tabulating results, and visualizings (marginal means to prob interactions); generalized estimating equations (GEE) SEM Structural Equation Modeling Factor Analysis (EFA, CFA), latent variables and path analysis Other Additional Topics Room for Future Expansion The Authors Dr. Sarah Schwartz Dr. Tyson Barrett www.SarahSchwartzStats.com www.TysonBarrett.com Sarah.Schwartz@usu.edu Tyson.Battett@usu.edu Statistical Consulting Studio Data Science and Discover Unit Blocked Notes Thoughout all the eBooks in this encyclopedia, several small secitons will be blocked out in the following ways: These blocks denote an area UNDER CONSTRUCTION, so check back often. This massive undertaking started during the summer of 2018 and is far from complete. The outline of seven volumes is given above despite any one being complete. Feedback is welcome via either author’s email. These blocks denote something EXTREMELY IMPORTANT. Do NOT skip these notes as they will be used very sparingly. These blocks denote something to DOWNLOAD. This may include software installations, example datasets, or notebook code files. These blocks denote something INTERESTING. These point out information we found of interest or added value. These blocks denote LINKS to other websites. This may include instructional video clips, articles, or blog posts. We are all about NOT re-creating the wheel. If somebody else has described or illustrated a topic well, we celebrate it! 0.1 Code and Output This is how \\(R\\) code is shown: 1 + 1 THis is what the output of the \\(R\\) code above will look: ## [1] 2 Why choose R ? ADD SECTION: R vs. SPSS, SAS, Stata, ect… FREE, accessable, not any harder than others to learn reproducibity Check it out: an article from Fall 2016… No more excuses: R is better than SPSS for psychology undergrads, and students agree FYI This entire encyclopedia is written in \\(R Markdown\\), using \\(R Studio\\) as the text editor and the bookdown package to turn a collection of markdown documents into a coherent whole. The book’s source code is hosted on GitHub, at https://github.com/cehs-research/eBook_install. If you notice typos or other issues, feel free to open an issue on GitHub or send a pull request. If you do the latter, in your commit message, please add the sentence “I assign the copyright of this contribution to Dr.s Schwartz and Barrett,” so that I can maintain the option of publishing this book in other forms. Direct emails to the authors are also welcome. This work is licensed under the Attribution-NonCommercial-NoDerivatives 4.0 International License. "],
["overview.html", "1 Overview 1.1 R vs. R Studio 1.2 R Markdown vs. R Notebook 1.3 knit-R 1.4 More Indepth FAQs", " 1 Overview Before we get busy downloading and installing the actual software, here is the big picture. 1.1 R vs. R Studio R R Studio Programing Language Interface Program Install and Ignore Interact with Constantly Engine Dashboard “Many users think of \\(R\\) as a statistics system. We prefer to think of it of an environment within which statistical techniques are implemented. \\(R\\) can be extended (easily) via packages. There are about eight packages supplied with the \\(R\\) distribution and many more (over 10,000) are available through the \\(CRAN\\) family of Internet sites covering a very wide range of modern statistics.” - www.r-project.org “Where as \\(R\\) is a programming language that runs computations, \\(R Studio\\) is an integrated development environment (IDE) that provides an interface by adding many convenient features and tools. So the way of having access to a speedometer, rearview mirrors, and a navigation system makes driving much easier, using \\(RStudio’s\\) interface makes using \\(R\\) much easier as well.” - Chester Ismay and Albert Y. Kim For a more in-depth discussion on the difference between \\(R\\) and \\(R Studio\\) IDE, watch this DataCamp video (2m52s). 1.2 R Markdown vs. R Notebook R Markdown R Notebook Plain text that includes shorthand notation to denote formatting, instead of relying on a text editor program display (MS Word). Files are saved with the .Rmd extension. A specific kind of .Rmd file in which the code chunks may be interactively executed/run onscreen and the results/output are shown directly below each code chunk. \\(R Markdown\\) documents are fully reproducible. You may use the productive notebook interface to weave together narrative text and code to produce elegantly formatted output. -(Allaire et al. 2018). More details at the R Studio website: R Markdown, lesson 1 and R Notebooks 1.3 knit-R With the click of a button, the knitr package converts a \\(R notebook\\) (.Rmd) to an intermediary Markdown file (.md), which \\(R Studio\\) will further transform to various final file types, including (Xie 2015): .pdf using \\(LaTeX\\) (beautiful) .html using another package called \\(markdown\\) (highly viewable) Word document using Pandoc (probably be ugly) knitr is an engine for dynamic report generation with \\(R\\). It is a package in the statistical programming language \\(R\\) that enables integration of R code into \\(LaTeX\\), \\(LyX\\), \\(HTML\\), \\(Markdown\\), \\(AsciiDoc\\), and \\(text\\)s documents (Xie 2018). The professionals ar \\(R Studio\\) show it better at their website. 1.4 More Indepth FAQs Helpful Websites: Quick R: Basic Statistics and Introduction to R What is R ? \\(R\\) is a language and environment for statistical computing and graphics. (R Core Team 2018) \\(R\\) provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, clustering, …) and graphical techniques, and is highly extensible. The \\(S\\) language is often the vehicle of choice for research in statistical methodology, and \\(R\\) provides an Open Source route to participation in that activity. One of \\(R\\)’s strengths is the ease with which well-designed publication-quality plots can be produced, including mathematical symbols and formulae where needed. Great care has been taken over the defaults for the minor design choices in graphics, but the user retains full control. What is R Markdown ? According to R Studio: “\\(R Markdown\\) is a format that enables easy authoring of reproducible web reports from \\(R\\). It combines the core syntax of Markdown (an easy-to-write plain text format for web content) with embedded \\(R\\) code chunks that are run so their output can be included in the final document”. What is Dynamic Reporting? From Penn State Statistics: The traditional way to write a report: Run your analysis in software, like SPSS, and manually save our output i.e. saving huge output files with hundreds of pages Type your your description and interpretation in a text editor, like Word, either drag/drop tables or worse retyping all the numbers A report written in this way can be problematic. For instance, imagine your Mentor/collaborator/journal reviewer telling you that they want to use a sub-sample instead of the entire sample, or exclude three subjects for a specifica reason. Or more likely to include another variable. You would have to redo all of your work!! If you are using a \\(R Notebook\\), you just change/add a few lines of code and re-run the entire file. Everything gets updated internally. Hours saved! Another bonus is that the single \\(R Notebook\\) file includes exact details of every step: which data file you used, how your cleaned/wrangled your data, and exactly how models were specified. Therefore, in this way dynamic also means reproducible, in the sense that people who get the file from you can reproduce the entire work in the report. No guessing which version of your file you used and hunting through stacks of output. Is this a popular method for creating reports? YES! Check out Rpubs. This website shares lots of documents written in the way we will introduce below. "],
["install-software.html", "2 Install Software 2.1 The R Programing Language 2.2 The R Studio IDE 2.3 TeX (optional)", " 2 Install Software You will need to install both \\(R\\) and \\(R Studio\\), but \\(\\LaTeX\\) is optional. 2.1 The R Programing Language The “Comprehensive R Archive Network” (CRAN) is a collection of sites which carry identical material, consisting of the \\(R\\) distribution(s), the contributed extensions (packages), and documentation for \\(R\\). From \\(CRAN\\), you can obtain the latest official FREE release of BASE \\(R\\). Go to: www.r-project.org Choose a CRAN mirror close to your geographical location Select base \\(R\\) for your computer (Windows, Mac, ect.) Once it is downloaded, run the instalation. The defaults are good…don’t change them…just keep clicking ‘Next’ The \\(R\\) Project website has an extensive FAQ Each new release of \\(R\\) is given a name that references a Peanuts strip or film. Read some of the past names and find out where they came from: blog post 2.2 The R Studio IDE RStudio is a company that is also an active member of the \\(R\\) community. They believe free and open source data analysis software is a foundation for innovative and important work in science, education, and industry. Their namesake software, \\(RStudio\\), is an integrated development environment (IDE) for \\(R\\). It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management. Go to: www.rstudio.com Select the FREE Open Source Desktop Edition of \\(R Studio\\) The defaults are good…don’t change them…just keep clicking ‘Next’ \\(R Studio\\) has an entire online learning library. It is full of helpful links and resources for R programing, R markdown, and statistics. Note: The \\(R Consortium\\) is a collaboration between the \\(R\\) Foundation, \\(RStudio\\), \\(Microsoft\\), \\(TIBCO\\), \\(Google\\), \\(Oracle\\), \\(HP\\) and others. It’s chartered to fund and inspire ideas that will enable \\(R\\) to become an even better platform for science, research, and industry. 2.3 TeX (optional) \\(\\TeX\\) or \\(LaTeX\\) is a typesetting or formatting system that is commonly used in printing and publishing, especially anything with formulas (see https://texfaq.org/FAQ-whatTeX). It is NOT NEEDED to run \\(R\\), but \\(R Studio\\) must have access to it in order to knit a \\(R Notebook\\) into a .pdf file. There are many versions, but the following are the ones that work best with \\(R\\), depending on your computer’s platform. 2.3.1 Mac - use MacTeX Go to: http://tug.org/mactex/ Download (5+ min) to a folder and them double click on the PKG file Follow the installation instructions. You don’t need to open anything after MacTeX is finished installing. 2.3.2 Windows - use MikTeX Go to: http://miktex.org/download Pick the latest version of the Net Installer, not the Basic! You need the full version 64-bit is better, if you have a 64-bit machine When your download is complete, run the downloaded installer. Windows may ask you if you want to “allow this app from an unknown publisher to make changes to your PC”. If it does, make sure to click Yes! This is the slowest part… 2.3.3 New Option: the tinytex package??? tinyteX is still a relatively new project which strives to offer all the functionality of \\(\\LaTeX\\), but remain lightweight and easier to maintain. As it is so new, we are not adopting it currently, but keeping an eye on what is to come. Keep an eye on the developing tinytex package by checking back to it’s home page. "],
["install-packages.html", "3 Install Packages 3.1 Package FAQ 3.2 Installing packages 3.3 Useful Packages on CRAN 3.4 Userful Packages on \\(GitHub\\)", " 3 Install Packages Learn what packages are and how to get them. 3.1 Package FAQ 3.1.1 What are packages ? \\(R\\) packages are collections of functions and data sets (just files) developed by the community (or you). They increase the power of \\(R\\) by improving existing base \\(R\\) functionalities, or by adding new ones. When you download \\(R\\) you are only getting the bare-bones, most basic files. This is nice, as it keeps the program from hogging your entire hard drive, but doesn’t offer much in terms of data anaysis. Today there are over 10,000 packages available on \\(CRAN\\) alone, so downloading all of them would be silly and probably fill your computer several times over. Individual users are left with the freedom to choose which packages they need. More information may be found here: https://www.datacamp.com/community/tutorials/r-packages-guide 3.1.2 Where can you get packages ? A repository is a place where packages are located so you can install them from it. Typically they are online and accesible to everyone. Three of the most popular repositories for \\(R\\) packages are: Repository \\(CRAN\\): the official repository, it is a network of \\(ftp\\) and web servers mantained by the \\(R\\) community around the world. It is coordinated by the \\(R\\) foundation, and for a package to be published here it needs to pass several tests here. \\(GitHub\\): although this is not \\(R\\) specific, \\(GitHub\\) is probably the most popular repository for open source projects. Its popularity comes from the unlimited space for open source, the integration with \\(git\\), a version control software, and its ease to share and collaborate with others. But be aware that there is no review process associated to it. (All the files for this eBook are stored on \\(GitHub\\).) Bioconductor: this is a topic specific repository, intended for open source software for bioinformatics. As \\(CRAN\\), it has its own submission and review processes, and its community is very active having several conferences and meetings per year. 3.2 Installing packages Installing is the act of getting the package files onto your computer and stored in a location on your hard drive where \\(R\\) can find them. Usually the files are zipped/compress and must be extracted/unpacked. The directions below will walk you through the automated process of using the user interface in \\(R Studio\\) (rather than actual syntax). In R Studio: Click on the Packages tab in the panel with the most tabs Click on the word Install just under and to the left of the tab In the box labelled “Packages”, type the name of the package you would like to download. You can do several at once, just seperate them with at least one space or a comma. You only need to INSTALL packages ONCE per computer. Leave the installation “library path” as the default. Also, make sure the box for “Installing dependencies” box is checked. ? You can copy-and-paste the following list into the box (labeled 3 above) to load the packages that we find most commonly used. You can install more packages at any time. Useful Package List tidyverse, furniture, pander, stargazer, texreg, xtable, kableExtra, RColorBrewer, gghighlight, ggthemes, ggfortify, ggalt, ggExtra, GGally, ggeffects, corrplot, gpairs, gridextra, likert, vcd, scales, cowplot, yarrr, psych, polycor, corpcor, sjlabelled, sjPlot, sjmisc, sjstats, Hmisc, labelled, afex, emmeans, corpcor, multicomp, multcompView, car, effects, predictmean, nlme, lme4, lmerTest, HLMdiag, geepack, gee, gee4, optimx, MuMIn, lavaan, OpenMx, sem, semPlot, randomForest, randomForestSRC, ggRandomForests, party, partykit, mgcv, glmnet, survival, caret, bookdown, blogdown, tidytex, xaringan, REDCapR, redcapAPI, devtools, testthat, roxygen2 When you click the Install buttom, a smaller window may asks if you would like to “re-start \\(R\\) prior to installing”, choose “no” and manually close and open the \\(R Studio\\) program once all packages have been downloaded, unpacked, and checked (saves time). This may take a few minutes, especially if you have selected multiple packages. 3.3 Useful Packages on CRAN A curated list of handy \\(R\\) packages and tools can be found at awesome-r.com 3.3.1 The Tidy-Universe, a META package from \\(R Studio\\) The tidyverse is an opinionated collection of \\(R\\) packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures. The core tidyverse includes the packages that you are likely to use in everyday data analyses. As of tidyverse 1.2.0, the top 8 packages in the following table are included in the core tidyverse. The tidyverse also includes many other packages with more specialised usage. They are not loaded automatically with library(tidyverse), so you’ll need to load each one with its own call to library(). website description dplyr A Grammar of Data Manipulation forcats Tools for Working with Categorical Variables (Factors) ggplot2 Create Elegant Data Visualisations Using the Grammar of Graphics purrr Functional Programming Tools readr Read Rectangular Text Data stringr Simple, Consistent Wrappers for Common String Operations (Text) tibble Simple Data Frames tidyr Easily Tidy Data with broom Convert Statistical Analysis Objects into Tidy Tibbles haven Import and Export SPSS, Stata and SAS Files hms Pretty Time of Day lubridate Make Dealing with Dates a Little Easier magrittr A Forward-Pipe Operator for \\(R\\) glue Interpreted String Literals readxl Read Excel Files tibble Simple Data Frames 3.3.2 Groups of Individual Packages on \\(CRAN\\) 3.3.2.1 Creating Tables website description furniture Tables for Quantitative Scientists pander An R ‘Pandoc’ Writer (makes tables look nice) stargazer Well-Formatted Regression and Summary Statistics Tables texreg Conversion of R Regression Output to LaTeX or HTML Tables xtable Export Tables to LaTeX or HTML kableExtra Construct Complex Table with kable and Pipe Syntax 3.3.2.2 Visualization website description RColorBrewer Color Palettes gghighlight Highlight Lines and Points in ggplot2 ggthemes Extra Themes, Scales, and Geoms for ggplot2 ggExtra Add Marginal Histograms to ggplot2, and More ggplot2 Enhancements ggfortify Data Visualization Tools for Statistical Analysis Results ggalt Lots of extras for ggplot2 GGally Extension to ggplot2 corrplot Visualization of a Correlation Matrix gpairs The Generalized Pairs Plot gridextra Miscellaneous Functions for “Grid” Graphics likert Analysis and Visualization Likert Items vcd Visualizing Categorical Data scales Scale Functions for Visualization cowplot Streamlined Plot Theme &amp; Annotations for ggplot2 yarrr The Pirate’s Guide to \\(R\\) 3.3.2.3 Generally Handy website description polycor Polychoric and Polyserial Correlations psych Psychological or Psychometric Procedures corpcor Covariance and (Partial) Correlation sjlabelled Labelled Data Utility Functions sjPlot Data Visualization for Statistics in Social Science sjmisc Data and Variable Transformation Functions sjstats Convenient Functions for Common Statistical Computations Hmisc Harrell Miscellaneous labelled Manipulating Labelled Data 3.3.2.4 t-Tests, ANOVA, and RM ANOVA website description afex Analysis of Factorial Experiments emmeans Estimated Marginal Means, aka Least-Squares Means multicomp Simultaneous Inference in General Parametric Models multcompView Visualizations of Paired Comparisons 3.3.2.5 Regression (ML, GLM) website description car Companion to Applied Regression effects Effect Displays for Linear, Generalized Linear, and Other Models predictmeans Calculate Predicted Means for Linear Models 3.3.2.6 Multilevel Models (MLM, HLM, GEE) website description nlme Linear and Nonlinear Mixed Effects Models lme4 Linear Mixed-Effects Models lmerTest Tests in Linear Mixed Effects Models HLMdiag Diagnostic Tools for Hierarchical (Multilevel) Linear Models geepack Generalized Estimating Equation Package gee Generalized Estimation Equation Solver gee4 Generalised Estimating Equations (GEE/WGEE) optimx A Replacement and Extension of the optim() Function MuMIn Multi-Model Inference 3.3.2.7 Structural Equation Modeling (SEM) website description lavaan Latent Variable Analysis OpenMx Extended Structural Equation Modelling sem Structural Equation Modelling semPlot Path Diagrams and Visual Analysis of Various SEM Packages’ Output 3.3.2.8 Random Forests website description randomForest Random Forests for Classification and Regression randomForestSRC for Survival, Regression, and Classification ggRandomForests Visually Exploring Random Forests party A Laboratory for Recursive Partytioning partykit A Toolkit for Recursive Partytioning 3.3.2.9 Other Models website description mgcv Mixed GAM Computation Vehicle with Automatic Smoothness Estimation glmnet Lasso and Elastic-Net Regularized Generalized Linear Models survival Survival Analysis caret Classification and Regression Training 3.3.2.10 Reproducibility and Reporting website description bookdown Authoring Books and Technical Documents blogdown Create Blogs and Websites tidytex Helper Functionsfor \\(TeX Live\\), Compile \\(LaTeX\\) Documents xaringan Presentation Ninja Note: slidify &amp; ReportRs have been removed from \\(CRAN\\) 3.3.2.11 REDCap Interface website description redcapAPI Interface to \\(REDCap\\) REDCapR Interaction Between \\(R\\) and \\(REDCap\\) 3.3.2.12 Creating Your Own Packages website description devtools Tools to Make Developing \\(R\\) Packages Easier testthat Unit Testing for \\(R\\) roxygen2 In-Line Documentation for \\(R\\) 3.4 Userful Packages on \\(GitHub\\) First, make sure you have the devtools package installed on your computer (hint: it is included in the list above). install.packages(&quot;devtools&quot;) 3.4.1 Templates for writing tutorials, practicals or examination papers with \\(R Markdown\\) unilur is a \\(R\\) package to help writing tutorials, practicals or examination papers with \\(R Markdown\\). With unilur you can render the following outputs from a single rmarkdown file: the exam or tutorial questions (answers remaining hidden) as a PDF or HTML file. the exam or tutorial questions with sample answers as a PDF or HTML file. In addition, you will be able to: Create coloured boxes to highlight some markdown or R content. Create examination papers with multiple choice questions a candidate identification form dotted lines placeholders to fill in answers Create a new \\(R Markdown\\) file with solution chunks replaced by empty ones. Website: GitHub - unilur Tutorial: blog post - unilur devtools::install_github(&quot;koncina/unilur&quot;) 3.4.2 Prepare APA journal articles with \\(R Markdown\\) papaja is a \\(R\\) package in the making including a \\(R Markdown\\) template that can be used with (or without) \\(R\\) Studio to produce documents, which conform to the American Psychological Association (APA) manuscript guidelines (6th Edition). The package uses the \\(LaTeX\\) document class apa6 and a .docx-reference file, so you can create PDF documents, or Word documents if you have to. Moreover, papaja supplies \\(R\\) functions that facilitate reporting results of your analyses in accordance with APA guidelines. papaja has not yet been submitted to \\(CRAN\\) because it is under active development. Currently, there are still a couple of loose ends they would like to tie up before we release the package to a larger audience. There are two versions you can install from the \\(GitHub\\) website. Website: GitHub - papaja Tutorial: eBook - papaja # Install the stable development verions from GitHub devtools::install_github(&quot;crsh/papaja&quot;) # Install the latest development snapshot from GitHub devtools::install_github(&quot;crsh/papaja@devel&quot;) "],
["workspace-orientation.html", "4 Workspace Orientation 4.1 Default Window Arrangement 4.2 Cheatsheets 4.3 Global Options Menu 4.4 Various Tabs", " 4 Workspace Orientation Get a feel for the lay of the land. ADD SECTION: This chapter has not been started yet. 4.1 Default Window Arrangement 4.2 Cheatsheets 4.3 Global Options Menu 4.3.1 Pane Layout 4.3.2 Appearance 4.4 Various Tabs 4.4.1 Files 4.4.2 Packages 4.4.3 Help 4.4.4 Environment "],
["notebook-workflow.html", "5 Notebook Workflow 5.1 Create a New Notebook 5.2 Interact within a Notebook 5.3 Knit a Notebook", " 5 Notebook Workflow Dive in feet first and create your first R Notebook. ADD SECTION: this chapter needs lots of attention. 5.1 Create a New Notebook 5.1.1 YAML header 5.1.2 Plain Text 5.1.3 Code Chunks 5.2 Interact within a Notebook 5.2.1 Run Code Chunks 5.2.2 Chunk Options 5.3 Knit a Notebook 5.3.1 Storing all associated files If you are using any files, such as datasets or images, they need to be stored in the same folder location as the R Notebook (.Rmd file). This folder location must be the Working Directory for the R Studio session. If you opened your .Rmd notebook file by double-clicking on its name, then this should be the case. 5.3.2 Setting the working directory To ensure that R Studio knows where to find the files, you can manually set the Working Directory through the menu: Click Session Select Set Working Directory by hovering your mouse over it Click on To Source File Location You can double check that you were successful by Click on the Files tab in the many-tab panel Click on the button with the gear that says More Click Go To Working Directory At this point you should see all the files that reside in the folder location where the open .Rmd files is also saved. 5.3.3 Press Knit "],
["periodic-updates.html", "6 Periodic Updates 6.1 The R Programing Language 6.2 The R Studio IDE 6.3 All Your R Packages", " 6 Periodic Updates Periodically you will need to update: R, R Studio, and your packages. ADD SECTION: This chapter has not been started yet. 6.1 The R Programing Language Go to: www.r-project.org 6.2 The R Studio IDE Go to: www.rstudio.com 6.3 All Your R Packages "],
["references.html", "References", " References "]
]
