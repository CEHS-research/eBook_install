[
["index.html", "Encyclopedia of Quantitative Methods in R Introduction", " Encyclopedia of Quantitative Methods in R Vol. 0: Setting up Your Computer Sarah Schwartz &amp; Tyson Barrett Last updated: 2018-08-14 Introduction Helpful Websites Quick R: Basic Statistics What is R? R is a language and environment for statistical computing and graphics. (R Core Team 2018) R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, clustering, …) and graphical techniques, and is highly extensible. The S language is often the vehicle of choice for research in statistical methodology, and R provides an Open Source route to participation in that activity. One of R’s strengths is the ease with which well-designed publication-quality plots can be produced, including mathematical symbols and formulae where needed. Great care has been taken over the defaults for the minor design choices in graphics, but the user retains full control. What is R Markdown? According to R Studio: “R Markdown is a format that enables easy authoring of reproducible web reports from R. It combines the core syntax of Markdown (an easy-to-write plain text format for web content) with embedded R code chunks that are run so their output can be included in the final document”. Dynamic Reporting From Penn State Statistics: The traditional way to write a report Run your analysis in software, like SPSS or R and manually save our output i.e. saving the ANOVA table or using pdf() to save the graphs Type your your description and interpretation in a text editor like Word either drag/drop tables and figures, or worse copy-paste and retype all the numbers A report written in this way can be problematic. For instance, imagine your Mentor/collaborator/journal reviewer telling you that they want to use a sub-sample instead of the entire sample. Or to include a nother variable. You would have to redo all of your work!! Therefore, in this way dynamic also means reproducible, in the sense that people who get the file from you can reproduce the entire work in the report. How does R Markdown work out to be a .pdf or .html file? R Markdown is a file with the file extension .Rmd, the knitr package will then transform the file into a Markdown file with the extension .md. Then Rstudio can (Xie 2015): Use LaTeX to transform the file into a .pdf Load another package called markdown to transform the file into .html Use Pandoc to even convert to file to a Word document (ugly) Is this a popular** method for creating reports?** Check out Rpubs. This website shares lots of documents written in the way we will introduce below. R Markdown documents are fully reproducible. Use a productive notebook interface to weave together narrative text and code to produce elegantly formatted output. Use multiple languages including R, Python, and SQL (Allaire et al. 2018). knitr is an engine for dynamic report generation with R. It is a package in the statistical programming language R that enables integration of R code into LaTeX, LyX, HTML, Markdown, AsciiDoc, and text documents (Xie 2018). "],
["install-r.html", "Chapter 1 Install R 1.1 First Time Installation 1.2 Update Regularly", " Chapter 1 Install R Here is where we talk about installing R. 1.1 First Time Installation Go to: www.r-project.org Get the latest released version of FREE Base \\(R\\) from \\(CRAN\\) Choose a mirror close to your geographical location Select base \\(R\\) for your computer (Windows, Mac, ect.) The defaults are good…don’t change them…just keep clicking ‘Next’ 1.2 Update Regularly "],
["install-r-studio.html", "Chapter 2 Install R Studio 2.1 First Time Installation 2.2 Update Regularly 2.3 Panel Layout", " Chapter 2 Install R Studio Here is where we talk about installing R Studio. 2.1 First Time Installation Go to: www.rstudio.com Get the latest version of the FREE Open Source Desktop Edition of R Studio The defaults are good…don’t change them…just keep clicking ‘Next’ 2.2 Update Regularly 2.3 Panel Layout "],
["install-tex.html", "Chapter 3 Install TeX 3.1 Use tinytex package 3.2 Mac - use MacTeX 3.3 Windows - use MikTeX", " Chapter 3 Install TeX Here is where we talk about installing Tex. 3.1 Use tinytex package 3.2 Mac - use MacTeX Go to: http://tug.org/mactex/ Download (5+ min) to a folder and them double click on the PKG file Follow the installation instructions. You don’t need to open anything after MacTeX is finished installing. 3.3 Windows - use MikTeX Go to: http://miktex.org/download Pick the latest version of the Net Installer, not the Basic! You need the full version 64-bit is better, if you have a 64-bit machine When your download is complete, run the downloaded installer. Windows may ask you if you want to “allow this app from an unknown publisher to make changes to your PC”. If it does, make sure to click Yes! This is the slowest part… "],
["install-packages.html", "Chapter 4 Install Packages 4.1 What are packages 4.2 Installing packages (via the user interface) 4.3 Updating packages", " Chapter 4 Install Packages We describe packages and their management 4.1 What are packages R packages are collections of functions and data sets developed by the community. They increase the power of R by improving existing base R functionalities, or by adding new ones. More information may be found here: https://www.datacamp.com/community/tutorials/r-packages-guide 4.2 Installing packages (via the user interface) You only need to INSTALL packages ONCE per computer. In R Stuido: Click on the Packages tab the panel with the most tabs Click on the word Instsall just under and to the left of the tab In the Packages box, type in the name of the packages you would like to download. You can do several at once, just seperate them with multiple spaces or a comma. Note: Leave the installation library path as the default. Also, make sure the box for ‘Installing dependencies’ is checked. You can copy-and-paste the following list into the box (labeled 3) to load the packages that we use most commonly all at once. tidyverse, furniture, pander, stargazer, texreg, xtable, RColorBrewer, gghighlight, ggthemes, ggfortify, ggalt, ggExtra, GGally, ggeffects, corrplot, gpairs, gridextra, likert, vcd, scales, cowplot, yarrr, psych, polycor, corpcor, sjlabelled, sjPlot, sjmisc, sjstats, Hmisc, labelled, afex, emmeans, corpcor, multicomp, multcompView, car, effects, predictmean, nlme, lme4, lmerTest, HLMdiag, geepack, gee, gee4, optimx, MuMIn, lavaan, OpenMx, sem, semPlot, randomForest, randomForestSRC, ggRandomForests, party, partykit, mgcv, glmnet, survival, caret, bookdown, blogdown, tidytex, xaringan, REDCapR, redcapAPI, devtools, testthat, roxygen2 When you click the Install buttom, a smaller window may asks if you would like to re-start \\(R\\) prior to installing, choose “no” and manually close and open the \\(R Studio\\) program once all packages have been downloaded, unpacked, and checked. This may take a few minutes, especially if you have selected multiple packages. See Chapter 6 for more information on how to install packages another way (via syntax code), as well as website links for each package. 4.3 Updating packages "],
["loading-packages.html", "Chapter 5 Loading Packages 5.1 LOAD packages (via \\(R\\) code)", " Chapter 5 Loading Packages While you only need to INSTALL a package ONCE per computer, you will need to LOAD each package in EVERY SESSION you want to use them in. 5.1 LOAD packages (via \\(R\\) code) Please don’t get confused: library() is the command used to load a package, and it refers to the place where the package is contained, usually a folder on your computer, while a package is the collection of functions bundled conveniently. Maybe it can help a quote from Hadley Wickham, Chief data scientist at RStudio, and instructor of the “Writing functions in R” DataCamp course (December 8, 2014): “a package is a like a book, a library is like a library; you use library() to check a package out of the library” library(tidyverse) Here is link to an AWSOME ‘cheat sheet’ for begginers working with the tidyverse package. I highly suggest checking it out. More ‘cheat sheets’ are available under the “Help” menu option in R Studio "],
["commonly-used-packages.html", "Chapter 6 Commonly Used Packages 6.1 The Tidy-Universe from \\(R Studio\\) 6.2 Groups of Individual Packages on \\(CRAN\\) 6.3 Install All the \\(CRAN\\) Packages at Once (via syntax code) 6.4 Other Developmental non-\\(CRAN\\) Packages on \\(GitHub\\)", " Chapter 6 Commonly Used Packages Here is where we talk about usefull packages… A curated list of awesome \\(R\\) packages and tools: https://awesome-r.com/ 6.1 The Tidy-Universe from \\(R Studio\\) install.packages(&quot;tidyverse&quot;) The tidyverse (www.tidyverse.org) is an opinionated collection of \\(R\\) packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures. 6.1.1 Core The core tidyverse includes the packages that you are likely to use in everyday data analyses. As of tidyverse 1.2.0, the following packages are included in the core tidyverse: library(tidyverse) website description dplyr A Grammar of Data Manipulation forcats Tools for Working with Categorical Variables (Factors) ggplot2 Create Elegant Data Visualisations Using the Grammar of Graphics purrr Functional Programming Tools readr Read Rectangular Text Data stringr Simple, Consistent Wrappers for Common String Operations (Text) tibble Simple Data Frames tidyr Easily Tidy Data with spread() and gather() Functions 6.1.2 Supplemental The tidyverse also includes many other packages with more specialised usage. They are not loaded automatically with library(tidyverse), so you’ll need to load each one with its own call to library(). library(haven) # example...may replace with any individual package name website description broom Convert Statistical Analysis Objects into Tidy Tibbles haven Import and Export SPSS, Stata and SAS Files hms Pretty Time of Day lubridate Make Dealing with Dates a Little Easier magrittr A Forward-Pipe Operator for \\(R\\) glue Interpreted String Literals readxl Read Excel Files tibble Simple Data Frames 6.2 Groups of Individual Packages on \\(CRAN\\) 6.2.1 Creating Tables website description furniture Tables for Quantitative Scientists pander An R ‘Pandoc’ Writer (makes tables look nice) stargazer Well-Formatted Regression and Summary Statistics Tables texreg Conversion of R Regression Output to LaTeX or HTML Tables xtable Export Tables to LaTeX or HTML 6.2.2 Visualization website description RColorBrewer Color Palettes gghighlight Highlight Lines and Points in ggplot2 ggthemes Extra Themes, Scales, and Geoms for ggplot2 ggExtra Add Marginal Histograms to ggplot2, and More ggplot2 Enhancements ggfortify Data Visualization Tools for Statistical Analysis Results ggalt Lots of extras for ggplot2 GGally Extension to ggplot2 corrplot Visualization of a Correlation Matrix gpairs The Generalized Pairs Plot gridextra Miscellaneous Functions for “Grid” Graphics likert Analysis and Visualization Likert Items vcd Visualizing Categorical Data scales Scale Functions for Visualization cowplot Streamlined Plot Theme &amp; Annotations for ggplot2 yarrr The Pirate’s Guide to \\(R\\) 6.2.3 Generally Handy website description polycor Polychoric and Polyserial Correlations psych Psychological or Psychometric Procedures corpcor Covariance and (Partial) Correlation sjlabelled Labelled Data Utility Functions sjPlot Data Visualization for Statistics in Social Science sjmisc Data and Variable Transformation Functions sjstats Convenient Functions for Common Statistical Computations Hmisc Harrell Miscellaneous labelled Manipulating Labelled Data 6.2.4 t-Tests, ANOVA, and RM ANOVA website description afex Analysis of Factorial Experiments emmeans Estimated Marginal Means, aka Least-Squares Means multicomp Simultaneous Inference in General Parametric Models multcompView Visualizations of Paired Comparisons 6.2.5 Regression (ML, GLM) website description car Companion to Applied Regression effects Effect Displays for Linear, Generalized Linear, and Other Models predictmeans Calculate Predicted Means for Linear Models 6.2.6 Multilevel Models (MLM, HLM, GEE) website description nlme Linear and Nonlinear Mixed Effects Models lme4 Linear Mixed-Effects Models lmerTest Tests in Linear Mixed Effects Models HLMdiag Diagnostic Tools for Hierarchical (Multilevel) Linear Models geepack Generalized Estimating Equation Package gee Generalized Estimation Equation Solver gee4 Generalised Estimating Equations (GEE/WGEE) optimx A Replacement and Extension of the optim() Function MuMIn Multi-Model Inference 6.2.7 Structural Equation Modeling (SEM) website description lavaan Latent Variable Analysis OpenMx Extended Structural Equation Modelling sem Structural Equation Modelling semPlot Path Diagrams and Visual Analysis of Various SEM Packages’ Output 6.2.8 Random Forests website description randomForest Random Forests for Classification and Regression randomForestSRC for Survival, Regression, and Classification ggRandomForests Visually Exploring Random Forests party A Laboratory for Recursive Partytioning partykit A Toolkit for Recursive Partytioning 6.2.9 Other Models website description mgcv Mixed GAM Computation Vehicle with Automatic Smoothness Estimation glmnet Lasso and Elastic-Net Regularized Generalized Linear Models survival Survival Analysis caret Classification and Regression Training 6.2.10 Reproducibility and Reporting website description bookdown Authoring Books and Technical Documents blogdown Create Blogs and Websites tidytex Helper Functionsfor \\(TeX Live\\), Compile \\(LaTeX\\) Documents xaringan Presentation Ninja Note: slidify &amp; ReportRs have been removed from \\(CRAN\\) 6.2.11 REDCap Interface website description redcapAPI Interface to \\(REDCap\\) REDCapR Interaction Between \\(R\\) and \\(REDCap\\) 6.2.12 Creating Your Own Packages website description devtools Tools to Make Developing \\(R\\) Packages Easier testthat Unit Testing for \\(R\\) roxygen2 In-Line Documentation for \\(R\\) 6.3 Install All the \\(CRAN\\) Packages at Once (via syntax code) Review the list of all the packages above: package_list_tables [1] &quot;furniture&quot; &quot;pander&quot; &quot;stargazer&quot; &quot;texreg&quot; &quot;xtable&quot; package_list_visual [1] &quot;RColorBrewer&quot; &quot;gghighlight&quot; &quot;ggthemes&quot; &quot;ggfortify&quot; [5] &quot;ggalt&quot; &quot;ggExtra&quot; &quot;GGally&quot; &quot;ggeffects&quot; [9] &quot;corrplot&quot; &quot;gpairs&quot; &quot;gridextra&quot; &quot;likert&quot; [13] &quot;vcd&quot; &quot;scales&quot; &quot;cowplot&quot; &quot;yarrr&quot; package_list_general [1] &quot;psych&quot; &quot;polycor&quot; &quot;corpcor&quot; &quot;sjlabelled&quot; &quot;sjPlot&quot; [6] &quot;sjmisc&quot; &quot;sjstats&quot; &quot;Hmisc&quot; &quot;labelled&quot; package_list_anova [1] &quot;afex&quot; &quot;emmeans&quot; &quot;corpcor&quot; &quot;multicomp&quot; [5] &quot;multcompView&quot; package_list_regression [1] &quot;car&quot; &quot;effects&quot; &quot;predictmeans&quot; package_list_multilevel [1] &quot;nlme&quot; &quot;lme4&quot; &quot;lmerTest&quot; &quot;HLMdiag&quot; &quot;geepack&quot; &quot;gee&quot; [7] &quot;gee4&quot; &quot;optimx&quot; &quot;MuMIn&quot; package_list_sem [1] &quot;lavaan&quot; &quot;OpenMx&quot; &quot;sem&quot; &quot;semPlot&quot; package_list_forest [1] &quot;randomForest&quot; &quot;randomForestSRC&quot; &quot;ggRandomForests&quot; &quot;party&quot; [5] &quot;partykit&quot; package_list_models [1] &quot;mgcv&quot; &quot;glmnet&quot; &quot;survival&quot; &quot;caret&quot; package_list_report [1] &quot;bookdown&quot; &quot;blogdown&quot; &quot;tidytex&quot; &quot;xaringan&quot; &quot;slidify&quot; &quot;ReportRs&quot; package_list_redcap [1] &quot;REDCapR&quot; &quot;redcapAPI&quot; package_list_package [1] &quot;devtools&quot; &quot;testthat&quot; &quot;roxygen2&quot; Get all the packages from \\(CRAN\\) (updates if new version available): install.packages(c(&quot;tidyverse&quot;, package_list_tables, package_list_visual, package_list_general, package_list_anova, package_list_regression, package_list_multilevel, package_list_sem, package_list_forest, package_list_models, package_list_report, package_list_redcap, package_list_package)) 6.4 Other Developmental non-\\(CRAN\\) Packages on \\(GitHub\\) First, make sure you have the devtools package installed on your computer (hint: its in the package_list_package list above). install.packages(&quot;devtools&quot;) 6.4.1 Templates for writing tutorials, practicals or examination papers with \\(R Markdown\\) unilur is a \\(R\\) package to help writing tutorials, practicals or examination papers with \\(R Markdown\\). With unilur you can render the following outputs from a single rmarkdown file: the exam or tutorial questions (answers remaining hidden) as a PDF or HTML file. the exam or tutorial questions with sample answers as a PDF or HTML file. In addition, you will be able to: Create coloured boxes to highlight some markdown or R content. Create examination papers with multiple choice questions a candidate identification form dotted lines placeholders to fill in answers Create a new \\(R Markdown\\) file with solution chunks replaced by empty ones. Website: GitHub - unilur Tutorial: blog post - unilur devtools::install_github(&quot;koncina/unilur&quot;) 6.4.2 Prepare APA journal articles with \\(R Markdown\\) papaja is a \\(R\\) package in the making including a \\(R Markdown\\) template that can be used with (or without) \\(R\\) Studio to produce documents, which conform to the American Psychological Association (APA) manuscript guidelines (6th Edition). The package uses the \\(LaTeX\\) document class apa6 and a .docx-reference file, so you can create PDF documents, or Word documents if you have to. Moreover, papaja supplies \\(R\\) functions that facilitate reporting results of your analyses in accordance with APA guidelines. papaja has not yet been submitted to \\(CRAN\\) because it is under active development. Currently, there are still a couple of loose ends they would like to tie up before we release the package to a larger audience. There are two versions you can install from the \\(GitHub\\) website. Website: GitHub - papaja Tutorial: eBook - papaja # Install the stable development verions from GitHub devtools::install_github(&quot;crsh/papaja&quot;) # Install the latest development snapshot from GitHub devtools::install_github(&quot;crsh/papaja@devel&quot;) "],
["kniting-notebooks.html", "Chapter 7 Kniting Notebooks 7.1 Storing all associated files 7.2 Setting the working directory 7.3 Press the \\(Knit\\) button", " Chapter 7 Kniting Notebooks 7.1 Storing all associated files If you are using any files, such as datasets or images, they need to be stored in the same folder location as the R Notebook (.Rmd file). This folder location must be the Working Directory for the R Studio session. If you opened your .Rmd notebook file by double-clicking on its name, then this should be the case. 7.2 Setting the working directory To ensure that R Studio knows where to find the files, you can manually set the Working Directory through the menu: Click Session Select Set Working Directory by hovering your mouse over it Click on To Source File Location You can double check that you were successful by Click on the Files tab in the many-tab panel Click on the button with the gear that says More Click Go To Working Directory At this point you should see all the files that reside in the folder location where the open .Rmd files is also saved. 7.3 Press the \\(Knit\\) button "],
["references.html", "References", " References "]
]
